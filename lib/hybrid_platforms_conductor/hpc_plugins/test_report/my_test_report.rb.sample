require 'hybrid_platforms_conductor/test_report'

module HybridPlatformsConductor

  module HpcPlugins

    module TestReport

      class MyTestReport < HybridPlatformsConductor::TestReport

        # Are dependencies met before using this plugin?
        # [API] - This method is optional
        #
        # Result::
        # * Boolean: Are dependencies met before using this plugin?
        def self.valid?
          true
        end

        # Add a Mixin to the DSL parsing the platforms configuration file.
        # This can be used by any plugin to add plugin-specific configuration getters and setters, accessible later from NodesHandler instances.
        # An optional initializer can also be given.
        # [API] - Those calls are optional
        module MyDSLExtension

          attr_accessor :my_property

          # Initialize the DSL
          def init_my_dsl_extension
            @my_property = 42
          end

        end
        self.extend_platforms_dsl_with MyDSLExtension, :init_my_dsl_extension

        # Handle tests reports
        def report
          puts "#{@tested_nodes.size} nodes have been tested."
          puts "#{@tests.select { |test| !test.errors.empty? }.size} tests have failed."
        end

      end

    end

  end

end
