#!/usr/bin/env ruby
require 'hybrid_platforms_conductor/executable'

executable = HybridPlatformsConductor::Executable.new(
  check_options: false,
  nodes_selection_options: false,
  parallel_options: false,
  plugins_options: false
)
nodes_handler = executable.nodes_handler
deployer = executable.deployer
deployer.timeout = 30
deployer.concurrent_execution = true
deployer.use_why_run = true
topographer = executable.topographer

executable.parse_options!

# Initialize the topograph
from_nodes, to_nodes = topographer.resolve_from_to
topographer.get_json_files

# The list of clusters to group nodes into 1 graphviz node to simplify the graph.
known_nodes_lists = nodes_handler.known_nodes_lists

executable.section 'Compute graph' do
  topographer.graph_for(nodes_handler.known_nodes)
end
executable.section 'Add nodes lists clusters' do
  topographer.graph_for_nodes_lists(known_nodes_lists)
end
executable.section 'Define IP 24 clusters' do
  topographer.define_clusters_ip_24
end
nodes = nil
executable.section 'Select path' do
  from_nodes = topographer.children_nodes(from_nodes)
  to_nodes = topographer.ancestor_nodes(to_nodes)
  nodes = from_nodes & to_nodes
end
executable.section "Filter only nodes #{nodes.sort.join(', ')}" do
  topographer.filter_in_nodes(nodes + topographer.cluster_nodes)
end
executable.section 'Collapse nodes lists' do
  topographer.collapse_nodes(known_nodes_lists)
end
executable.section 'Remove self references' do
  topographer.remove_self_connections
end
executable.section 'Remove empty clusters' do
  topographer.remove_empty_clusters
end
executable.section 'Write outputs' do
  topographer.dump_outputs
end
