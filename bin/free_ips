#!/usr/bin/env ruby
require 'range_operators'
require 'hybrid_platforms_conductor/executable'

executable = HybridPlatformsConductor::Executable.new(nodes_selection_options: false)

nodes_handler = executable.nodes_handler

executable.parse_options!

# Group IPs per first 3 numbers
nodes_handler.
  known_nodes.
  map do |node|
    conf = nodes_handler.metadata_for node
    conf.key?('private_ips') ? conf['private_ips'] : []
  end.
  flatten.
  uniq.
  group_by { |ip| ip.split('.')[0..2].map(&:to_i) }.
  sort.
  map { |ip_root, ips| [ip_root, ips.map { |ip| ip.split('.').last.to_i }] }.
  each do |ip_root, ip_fourths|
    executable.out "Free IPs for #{ip_root.join('.')}: #{([256] + ip_fourths).missing.rangify}"
  end
