#!/usr/bin/env ruby
require 'hybrid_platforms_conductor/nodes_handler'
require 'hybrid_platforms_conductor/cmd_runner'
require 'hybrid_platforms_conductor/ssh_executor'
require 'hybrid_platforms_conductor/deployer'
require 'hybrid_platforms_conductor/json_dumper'
require 'optparse'
require 'fileutils'

hosts = []
cmd_runner = HybridPlatformsConductor::CmdRunner.new
nodes_handler = HybridPlatformsConductor::NodesHandler.new
ssh_executor = HybridPlatformsConductor::SshExecutor.new(cmd_runner: cmd_runner, nodes_handler: nodes_handler)
deployer = HybridPlatformsConductor::Deployer.new(cmd_runner: cmd_runner, ssh_executor: ssh_executor)
json_dumper = HybridPlatformsConductor::JsonDumper.new(nodes_handler: nodes_handler, deployer: deployer)
deployer.timeout = 30
deployer.use_why_run = true
OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options]"
  opts.separator ''
  opts.separator 'Main options:'
  opts.on('-h', '--help', 'Display help and exit') do
    puts opts
    exit 0
  end
  nodes_handler.options_parse(opts)
  nodes_handler.options_parse_hosts(opts, hosts)
  json_dumper.options_parse(opts)
  ssh_executor.options_parse(opts)
  deployer.options_parse(opts, parallel_switch: false, plugins_options: false)
end.parse!
ssh_executor.validate_params
deployer.validate_params
raise "Unknown options: #{ARGV.join(' ')}" unless ARGV.empty?

json_dumper.dump_json_for(nodes_handler.resolve_hosts(hosts))
